#pragma once
#include <vector>
#include "augs/misc/container_with_small_size.h"
#include "augs/misc/basic_game_intent.h"
#include "augs/misc/basic_game_motion.h"

enum class motion_type {
	// GEN INTROSPECTOR enum class motion_type
	INVALID,

	MOVE_CROSSHAIR,

	COUNT
	// END GEN INTROSPECTOR
};

enum class intent_type {
	// GEN INTROSPECTOR enum class intent_type
	INVALID,

	SWITCH_DEVELOPER_CONSOLE,

	THROW,
	THROW_PRIMARY_ITEM,
	THROW_SECONDARY_ITEM,

	HOLSTER,
	HOLSTER_PRIMARY_ITEM,
	HOLSTER_SECONDARY_ITEM,

	START_PICKING_UP_ITEMS,

	USE_BUTTON,
	TAKE_HOLD_OF_WHEEL,
	RELEASE_CAR,

	SPACE_BUTTON,
	HAND_BRAKE,

	MOVE_FORWARD,
	MOVE_BACKWARD,
	MOVE_LEFT,
	MOVE_RIGHT,
	WALK,
	SPRINT,

	CROSSHAIR_PRIMARY_ACTION,
	CROSSHAIR_SECONDARY_ACTION,

	PRESS_GUN_TRIGGER,

	RELOAD,

	SWITCH_LOOK,
	SWITCH_TO_GUI,
	DEBUG_SWITCH_CHARACTER,
	SWITCH_WEAPON_LASER,

	MELEE_PRIMARY_MOVE,
	MELEE_SECONDARY_MOVE,
	MELEE_TERTIARY_MOVE,

	HOTBAR_BUTTON_0,
	HOTBAR_BUTTON_1,
	HOTBAR_BUTTON_2,
	HOTBAR_BUTTON_3,
	HOTBAR_BUTTON_4,
	HOTBAR_BUTTON_5,
	HOTBAR_BUTTON_6,
	HOTBAR_BUTTON_7,
	HOTBAR_BUTTON_8,
	HOTBAR_BUTTON_9,

	PREVIOUS_HOTBAR_SELECTION_SETUP,

	SPECIAL_ACTION_BUTTON_1,
	SPECIAL_ACTION_BUTTON_2,
	SPECIAL_ACTION_BUTTON_3,
	SPECIAL_ACTION_BUTTON_4,
	SPECIAL_ACTION_BUTTON_5,
	SPECIAL_ACTION_BUTTON_6,
	SPECIAL_ACTION_BUTTON_7,
	SPECIAL_ACTION_BUTTON_8,
	SPECIAL_ACTION_BUTTON_9,
	SPECIAL_ACTION_BUTTON_10,
	SPECIAL_ACTION_BUTTON_11,
	SPECIAL_ACTION_BUTTON_12,
	
	CLEAR_DEBUG_LINES,

	COUNT
	// END GEN INTROSPECTOR
};

template <class, class>
struct basic_input_context;

using input_context = basic_input_context<intent_type, motion_type>;

using game_intent = basic_game_intent<intent_type>;
using game_motion = basic_game_motion<motion_type>;

using game_intent_vector = std::vector<game_intent>;
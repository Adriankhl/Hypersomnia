sudo: required
dist: trusty
language:
  - cpp
compiler:
  - gcc
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - gcc-7
      - g++-7
      - cmake
env:
  - config=Debug
python:
  - "3.6"
install:
  - sudo apt-get install -y gdb  # install gdb  
before_script:
  - ulimit -c unlimited -S       # enable core dumps
script:
  # Check versions
  - gcc -v && g++ -v && cmake --version && make --version
  - python --version
  # Run your build commands next
  - mkdir dev
  - cd dev
  # - We don't need to allocate entities statically for performance as this is just a test.
  # - We don't need to archive builds, either.
  - cmake -DUNIX=ON -DCMAKE_CXX_FLAGS="-m64" -DCMAKE_C_FLAGS="-m64" -DCMAKE_BUILD_TYPE=Debug -DADD_MCMODEL_LARGE_FLAG=OFF -DHYPERSOMNIA_BARE=ON -DSTATICALLY_ALLOCATE_ENTITIES_NUM=0 -DSTATICALLY_ALLOCATE_ASSETS=0 -DSTATICALLY_ALLOCATE_BAKED_FONTS=0 -DBUILD_IN_CONSOLE_MODE=1 -DBUILD_HTTP_REQUESTS=OFF -DADD_COMMAND_TO_ARCHIVE_BUILDS_IN_RELEASE=OFF -D CMAKE_C_COMPILER=gcc-7 -D CMAKE_CXX_COMPILER=g++-7 ..
  - make --keep-going
  - cd ../hypersomnia
  - |
    if [[ "${config}" == "Debug" ]]; then 
      ../dev/Hypersomnia-Debug --unit-tests-only
    else
      ../dev/Hypersomnia --unit-tests-only
    fi

after_failure:
  - cd ../
  - echo $PWD
  - COREFILE=$(find . -maxdepth 1 -name "core*" | head -n 1) # find core file
  - if [[ -f "$COREFILE" ]]; then gdb -c "$COREFILE" example -ex "thread apply all bt" -ex "set pagination 0" -batch; else echo "No core file found" fi

notfications:
  email: false

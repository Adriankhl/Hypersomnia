os: linux
language: cpp
sudo: required
dist: trusty
addons:
  apt:
    packages:
     - gdb
     - apport
     - gcc-7
     - g++-7
     - cmake
     - libc++1
     - clang-5.0
    sources:
     - ubuntu-toolchain-r-test
     - llvm-toolchain-trusty-5.0
     - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-4.0 main'
     - key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'

python:
  - "3.6"

matrix:
  include:
  - env: c_compiler=clang cxx_compiler=clang++ config=Debug other_cmake_flags="-DBUILD_OPENAL=0"
  - env: c_compiler=gcc-7 cxx_compiler=g++-7 config=Debug other_cmake_flags=""

before_install:
 - ulimit -c
 - ulimit -a -S
 - ulimit -a -H
 - cat /proc/sys/kernel/core_pattern
 - cat /etc/default/apport
 - service --status-all || true
 - initctl list || true

script:
  - |
    if [[ "${c_compiler}" == "clang" ]]; then
      LLVM_VERSION="5.0.1"

      LLVM_URL="http://llvm.org/releases/${LLVM_VERSION}/llvm-${LLVM_VERSION}.src.tar.xz"
      LIBCXX_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxx-${LLVM_VERSION}.src.tar.xz"
      LIBCXXABI_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxxabi-${LLVM_VERSION}.src.tar.xz"
      mkdir -p llvm llvm/build llvm/projects/libcxx llvm/projects/libcxxabi
      travis_retry wget -O - ${LLVM_URL} | tar --strip-components=1 -xJ -C llvm
      travis_retry wget -O - ${LIBCXX_URL} | tar --strip-components=1 -xJ -C llvm/projects/libcxx
      travis_retry wget -O - ${LIBCXXABI_URL} | tar --strip-components=1 -xJ -C llvm/projects/libcxxabi
      (cd llvm/build && cmake .. -DCMAKE_INSTALL_PREFIX=${DEPS_DIR}/llvm/install)
      (cd llvm/build/projects/libcxx && make install -j2)
      (cd llvm/build/projects/libcxxabi && make install -j2)
      export CXXFLAGS="-isystem ${DEPS_DIR}/llvm/install/include/c++/v1"
      export LDFLAGS="-L ${DEPS_DIR}/llvm/install/lib -l c++ -l c++abi"
      export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${DEPS_DIR}/llvm/install/lib"
    fi
  - ${c_compiler} -v && ${cxx_compiler} -v && cmake --version && make --version && python --version
  - cmake/build.sh ${config} x64 ${c_compiler} ${cxx_compiler} "-DBUILD_IN_CONSOLE_MODE=1 -DBUILD_WINDOW_FRAMEWORK=0 ${other_cmake_flags}"
  - ulimit -c unlimited -S
  - cd build/${config}-x64-${c_compiler}
  - make tests -j2 --keep-going
  - ls -l
  - for i in $(find ./ -maxdepth 1 -name 'core*' -print); do gdb $(pwd)/../dev/${EXECUTABLE_NAME} core* -ex "thread apply all bt" -ex "set pagination 0" -batch; done;

notfications:
  email: false

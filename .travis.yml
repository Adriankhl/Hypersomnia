git:
  depth: false

os: linux
language: python
sudo: required
dist: bionic
addons:
  apt:
    packages:
     - gdb
     - apport
     - cmake
     - ninja-build
     - libxcb-keysyms1
     - libxcb-keysyms1-dev
     - libxi6
     - libxi-dev
     - alsa-oss
     - osspd-alsa
     - osspd
     - libasound2
     - libasound2-dev
     - p7zip
     - p7zip-full
     - libgl1-mesa-dev

python:
  - "3.6"

matrix:
  include:
  - env: c_compiler=clang-9 cxx_compiler=clang++-9 config=Release other_cmake_flags="-DGENERATE_DEBUG_INFORMATION=0 -DBUILD_IN_CONSOLE_MODE=1"
    compiler: clang-9
#  - env: c_compiler=gcc-7 cxx_compiler=g++-7 config=Debug other_cmake_flags=""
#    compiler: gcc
#  - env: c_compiler=gcc-7 cxx_compiler=g++-7 config=RelWithDebInfo other_cmake_flags=""
#    compiler: gcc

before_install:
 - ulimit -c
 - ulimit -a -S
 - ulimit -a -H
 - cat /proc/sys/kernel/core_pattern
 - cat /etc/default/apport
 - service --status-all || true
 - initctl list || true
 - wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
 - sudo add-apt-repository -y "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-7 main"
 - sudo apt-get -q update
 - sudo apt-get -y install clang-7 lld-7 libc++-7-dev libc++abi-7-dev

install:
  - python --version
  - pip install urllib3
  - pushd /usr/local/lib
  - ls
  - popd
  - wget https://github.com/jedisct1/libsodium/releases/download/1.0.16/libsodium-1.0.16.tar.gz -O /tmp/libsodium.tar.gz
  - pushd .
  - cd /tmp
  - tar -zxvf /tmp/libsodium.tar.gz
  - cd libsodium-*
  - ./configure --disable-shared
  - make
  - sudo make install
  - popd
  - wget https://github.com/ARMmbed/mbedtls/archive/mbedtls-2.13.0.tar.gz -O /tmp/mbedtls.tar.gz
  - pushd .
  - cd /tmp
  - tar -zxvf mbedtls.tar.gz
  - cd mbedtls-mbedtls-*
  - cmake .
  - make
  - sudo make install
  - popd
  - pushd /usr/local/lib
  - ls
  - popd
  - sudo ldconfig

script:
  - ${c_compiler} -v && ${cxx_compiler} -v && cmake --version && make --version && python --version
  - export CC=${c_compiler}
  - export CXX=${cxx_compiler}
  - export LDFLAGS="${LDFLAGS} -L /usr/local/lib"
  - cmake/build.sh ${config} x64 "${other_cmake_flags}"
  - cat build/current/build.ninja
  - ulimit -c unlimited -S
  - pushd build/current
  - ninja tests -k 0
  - ls -l
  - popd
  - ls -l hypersomnia
  - cmake/print_bt_if_core_found.sh hypersomnia/core
  - cmake/upload_if_exe_found.sh $artifact_upload_key

notfications:
  email: false
